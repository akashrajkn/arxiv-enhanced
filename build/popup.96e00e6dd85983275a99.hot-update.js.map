{"version":3,"file":"popup.96e00e6dd85983275a99.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AASA;AACA;;AAGA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AAFA;AASA;AACA;AACA;AAEA;AACA;AADA;AADA;AAHA;AAUA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAEA;AACA;AADA;AADA;AAHA;AA1BA;AAFA;;AAFA;AAEA;AAwCA;AACA;AACA;AA5CA;AAAA;;AAAA;AAAA;AAAA;AA8CA;;AA9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoDA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AAHA;AAAA;;AAAA;AAKA;AACA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApDA;AAAA;;AA6DA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;AAlIA;;AAoIA;AAAA;;;;;;;;;;AA9IA;AAUA;;;;;;;;;;;;;;;;;AC1BA","sources":["webpack://arxiv-enhanced/./src/pages/Popup/Popup.jsx","webpack://arxiv-enhanced/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\n\nimport { Client } from \"@notionhq/client\"\nimport {\n  Button,\n  Heading,\n  Checkbox,\n  Stack,\n  Input,\n  Image,\n} from \"@chakra-ui/react\";\n\nimport './Popup.css';\nimport axios from 'axios';\n\n\nfunction getTodayDate() {\n  var today = new Date();\n  var dd    = String(today.getDate()).padStart(2, '0');\n  var mm    = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  var yyyy  = today.getFullYear();\n\n  today     = yyyy + '-' + mm + '-' + dd;\n  return today;\n}\n\nconst Popup = () => {\n\n  async function addItemToDB(notion, databaseId, paperLink, paperTitle, tags, comments, completedReading) {\n    try {\n      const response = await notion.pages.create({\n        parent     : { database_id: databaseId },\n        properties : {\n          'Paper Link': {\n            title : [\n              {\n                \"text\" : {\n                  \"content\" : paperLink\n                }\n              }\n            ]\n          },\n          'Paper Title': {\n            \"type\"      : 'rich_text',\n            \"rich_text\" : [\n              {\n                \"text\" : {\n                  \"content\" : paperTitle\n                }\n              }\n            ],\n          },\n          'Added on': {\n            type : 'date',\n            date : {\n              start: getTodayDate(),\n            },\n          },\n          'Comments': {\n            \"type\"      : 'rich_text',\n            \"rich_text\" : [\n              {\n                \"text\" : {\n                  \"content\" : comments\n                }\n              }\n            ],\n          },\n        },\n      })\n      console.log(response)\n      console.log(\"Success! Entry added.\")\n      window.close();\n    } catch (error) {\n      console.error(error.body)\n    }\n  }\n\n  async function getPaperTitle(paperLink) {\n\n    let arxivAbstractLink = paperLink.substring(0, paperLink.length - 4); // Remove the last '.pdf' part in the link\n    arxivAbstractLink     = arxivAbstractLink.replace('pdf', 'abs');\n\n    const response = await axios.get(arxivAbstractLink);\n    console.log(response)\n  }\n\n  function onSubmitClick(comments, tags, checked) {\n    console.log(\"submit\");\n    console.log(comments);\n    console.log(tags);\n    console.log(checked);\n\n    const notion     = new Client({ auth: 'secret_22YhuOAcoLbRZD4QvNmVAn3qXjFl4IUAPxYh0Shar6I' }) // process.env.NOTION_KEY })\n    const databaseId = '849569abcf6444fab78bc5d98a5c6d40' // process.env.NOTION_DATABASE_ID\n\n    let queryOptions = { active: true, currentWindow: true };\n    chrome.tabs.query(queryOptions, tabs => {\n\n      console.log(\"---------------\")\n      console.log(tabs[0].url)\n\n      let paperLink = tabs[0].url;\n\n      if (typeof paperLink !== \"undefined\" && paperLink.includes('arxiv.org/pdf')) {\n\n        getPaperTitle(paperLink);\n        // addItemToDB(notion, databaseId, paperLink, 'two', tags, comments, checked);\n      }\n    });\n  }\n\n  const [comments, setComments] = React.useState('');\n  const [tags, setTags]         = React.useState('');\n  const [checked, setChecked]   = React.useState(false);\n  const handleCommentsChange    = (event) => setComments(event.target.value)\n  const handleTagsChange        = (event) => setTags(event.target.value)\n  const handleCheckboxChange    = (event) => setChecked(event.target.checked)\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Heading\n          fontWeight    = {600}\n          fontSize      = {{ base: '2xl', sm: '4xl', md: '6xl' }}\n          lineHeight    = {'110%'}\n          paddingBottom = {4}\n          color         = {'#282c34'}\n        >\n          ArXiv Enhanced\n        </Heading>\n\n        <Stack spacing = {4}>\n          <Input type = \"text\" color = {'#282c34'} placeholder = \"Comments\" value = {comments} onChange = {handleCommentsChange} />\n          <Input type = \"text\" color = {'#282c34'} placeholder = \"Tags\"     value = {tags}     onChange = {handleTagsChange} />\n\n          <Checkbox color = {'#282c34'}\n            value = {checked}\n            onChange = {handleCheckboxChange}\n          >\n            Completed Reading\n          </Checkbox>\n\n          <Button \n            w       = \"full\" \n            color   = \"gray.900\"\n            onClick = {() => onSubmitClick(comments, tags, checked)}\n          >\n            Submit\n          </Button>\n        </Stack>\n\n      </header>\n    </div>\n  );\n};\n\nexport default Popup;\n","__webpack_require__.h = () => (\"155486ddea09542c72e6\")"],"names":[],"sourceRoot":""}