{"version":3,"file":"popup.698def40fe6723c40a7d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;AAEA;AASA;;AAGA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAHA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAFA;AAtBA;AAFA;;AAFA;AAEA;AA8BA;AACA;AACA;AACA;AAnCA;AAAA;;AAAA;AAAA;AAAA;AAqCA;;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;;AA4CA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAAA;;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;AArGA;;AAuGA;AAAA;;;;;;;;;;AAjHA;AAUA;;;;;;;;;;;;;;;;;AC3BA","sources":["webpack://arxiv-enhanced/./src/pages/Popup/Popup.jsx","webpack://arxiv-enhanced/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\n\n// import axios from 'axios';\nimport { Client } from \"@notionhq/client\"\n\nimport {\n  Button,\n  Heading,\n  Checkbox,\n  Stack,\n  Input,\n  Image,\n} from \"@chakra-ui/react\";\n\nimport './Popup.css';\n\n\nfunction getTodayDate() {\n  var today = new Date();\n  var dd    = String(today.getDate()).padStart(2, '0');\n  var mm    = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  var yyyy  = today.getFullYear();\n\n  today     = yyyy + '-' + mm + '-' + dd;\n  return today;\n}\n\nconst Popup = () => {\n\n  async function addItemToDB(paperLink, paperTitle, tags, comments, completedReading) {\n    try {\n      const response = await notion.pages.create({\n        parent     : { database_id: databaseId },\n        properties : {\n          'Paper Link': {\n            type : 'text',\n            text : [\n              {\n                type : 'text',\n                text : {\n                  content: paperLink,\n                },\n              },\n            ],\n          },\n          'Paper Title': {\n            type : 'text',\n            text : paperTitle,\n          },\n          'Added on': {\n            type : 'date',\n            date : {\n              start: getTodayDate(),\n            },\n          },\n          'Comments': {\n            type : 'text',\n            text : comments,\n          },\n        },\n      })\n      console.log(\"-------\");\n      console.log(response)\n      console.log(\"Success! Entry added.\")\n      window.close();\n    } catch (error) {\n      console.error(error.body)\n    }\n  }\n\n\n  function onSubmitClick(comments, tags, checked) {\n    console.log(\"submit\");\n    console.log(comments);\n    console.log(tags);\n    console.log(checked);\n    // window.close();\n\n    const notion     = new Client({ auth: 'secret_22YhuOAcoLbRZD4QvNmVAn3qXjFl4IUAPxYh0Shar6I' }) // process.env.NOTION_KEY })\n    const databaseId = '849569abcf6444fab78bc5d98a5c6d40' // process.env.NOTION_DATABASE_ID\n    \n    addItemToDB('one', 'two', tags, comments, checked);\n  }\n\n  const [comments, setComments] = React.useState('');\n  const [tags, setTags]         = React.useState('');\n  const [checked, setChecked]   = React.useState(false);\n  const handleCommentsChange    = (event) => setComments(event.target.value)\n  const handleTagsChange        = (event) => setTags(event.target.value)\n  const handleCheckboxChange    = (event) => setChecked(event.target.checked)\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Heading\n          fontWeight    = {600}\n          fontSize      = {{ base: '2xl', sm: '4xl', md: '6xl' }}\n          lineHeight    = {'110%'}\n          paddingBottom = {4}\n          color         = {'#282c34'}\n        >\n          ArXiv Enhanced\n        </Heading>\n\n        <Stack spacing = {4}>\n          <Input type = \"text\" color = {'#282c34'} placeholder = \"Comments\" value = {comments} onChange = {handleCommentsChange} />\n          <Input type = \"text\" color = {'#282c34'} placeholder = \"Tags\"     value = {tags}     onChange = {handleTagsChange} />\n\n          <Checkbox color = {'#282c34'}\n            value = {checked}\n            onChange = {handleCheckboxChange}\n          >\n            Completed Reading\n          </Checkbox>\n\n          <Button \n            w       = \"full\" \n            color   = \"gray.900\"\n            onClick = {() => onSubmitClick(comments, tags, checked)}\n          >\n            Submit\n          </Button>\n        </Stack>\n\n      </header>\n    </div>\n  );\n};\n\nexport default Popup;\n","__webpack_require__.h = () => (\"49860a36409a63d4a50c\")"],"names":[],"sourceRoot":""}